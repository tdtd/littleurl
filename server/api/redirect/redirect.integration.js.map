{"version":3,"sources":["../../../../server/api/redirect/redirect.integration.js"],"names":[],"mappings":"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","file":"redirect.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newRedirect;\n\ndescribe('Redirect API:', function() {\n\n  describe('GET /', function() {\n    var redirects;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          redirects = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      redirects.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/')\n        .send({\n          name: 'New Redirect',\n          info: 'This is the brand new redirect!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newRedirect = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created redirect', function() {\n      newRedirect.name.should.equal('New Redirect');\n      newRedirect.info.should.equal('This is the brand new redirect!!!');\n    });\n\n  });\n\n  describe('GET //:id', function() {\n    var redirect;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('//' + newRedirect._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          redirect = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      redirect = {};\n    });\n\n    it('should respond with the requested redirect', function() {\n      redirect.name.should.equal('New Redirect');\n      redirect.info.should.equal('This is the brand new redirect!!!');\n    });\n\n  });\n\n  describe('PUT //:id', function() {\n    var updatedRedirect;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('//' + newRedirect._id)\n        .send({\n          name: 'Updated Redirect',\n          info: 'This is the updated redirect!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedRedirect = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedRedirect = {};\n    });\n\n    it('should respond with the updated redirect', function() {\n      updatedRedirect.name.should.equal('Updated Redirect');\n      updatedRedirect.info.should.equal('This is the updated redirect!!!');\n    });\n\n  });\n\n  describe('DELETE //:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('//' + newRedirect._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when redirect does not exist', function(done) {\n      request(app)\n        .delete('//' + newRedirect._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}