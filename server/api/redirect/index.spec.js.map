{"version":3,"sources":["../../../../server/api/redirect/index.spec.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,eAAe,EAAE,CAAC;;AAEzD,IAAI,gBAAgB,GAAG;AACrB,OAAK,EAAE,oBAAoB;AAC3B,MAAI,EAAE,mBAAmB;AACzB,QAAM,EAAE,qBAAqB;AAC7B,QAAM,EAAE,qBAAqB;AAC7B,SAAO,EAAE,sBAAsB;CAChC,CAAC;;AAEF,IAAI,UAAU,GAAG;AACf,KAAG,EAAE,KAAK,CAAC,GAAG,EAAE;AAChB,KAAG,EAAE,KAAK,CAAC,GAAG,EAAE;AAChB,OAAK,EAAE,KAAK,CAAC,GAAG,EAAE;AAClB,MAAI,EAAE,KAAK,CAAC,GAAG,EAAE;AACjB,YAAQ,KAAK,CAAC,GAAG,EAAE;CACpB,CAAC;;;AAGF,IAAI,aAAa,GAAG,UAAU,CAAC,YAAY,EAAE;AAC3C,WAAS,EAAE;AACT,UAAM,EAAE,kBAAW;AACjB,aAAO,UAAU,CAAC;KACnB;GACF;AACD,yBAAuB,EAAE,gBAAgB;CAC1C,CAAC,CAAC;;AAEH,QAAQ,CAAC,sBAAsB,EAAE,YAAW;;AAE1C,IAAE,CAAC,0CAA0C,EAAE,YAAW;AACxD,iBAAa,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;GACxC,CAAC,CAAC;;AAEH,UAAQ,CAAC,OAAO,EAAE,YAAW;;AAE3B,MAAE,CAAC,2CAA2C,EAAE,YAAW;AACzD,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,GAAG,EAAE,oBAAoB,CAAC,CACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,EAAE,YAAW;;AAE/B,MAAE,CAAC,0CAA0C,EAAE,YAAW;AACxD,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,MAAM,EAAE,mBAAmB,CAAC,CACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,QAAQ,EAAE,YAAW;;AAE5B,MAAE,CAAC,4CAA4C,EAAE,YAAW;AAC1D,gBAAU,CAAC,IAAI,CACZ,QAAQ,CAAC,GAAG,EAAE,qBAAqB,CAAC,CACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,EAAE,YAAW;;AAE/B,MAAE,CAAC,4CAA4C,EAAE,YAAW;AAC1D,gBAAU,CAAC,GAAG,CACX,QAAQ,CAAC,MAAM,EAAE,qBAAqB,CAAC,CACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,aAAa,EAAE,YAAW;;AAEjC,MAAE,CAAC,4CAA4C,EAAE,YAAW;AAC1D,gBAAU,CAAC,KAAK,CACb,QAAQ,CAAC,MAAM,EAAE,qBAAqB,CAAC,CACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,cAAc,EAAE,YAAW;;AAElC,MAAE,CAAC,6CAA6C,EAAE,YAAW;AAC3D,gBAAU,UAAO,CACd,QAAQ,CAAC,MAAM,EAAE,sBAAsB,CAAC,CACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KAChC,CAAC,CAAC;GAEJ,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar redirectCtrlStub = {\n  index: 'redirectCtrl.index',\n  show: 'redirectCtrl.show',\n  create: 'redirectCtrl.create',\n  update: 'redirectCtrl.update',\n  destroy: 'redirectCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar redirectIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './redirect.controller': redirectCtrlStub\n});\n\ndescribe('Redirect API Router:', function() {\n\n  it('should return an express router instance', function() {\n    redirectIndex.should.equal(routerStub);\n  });\n\n  describe('GET /', function() {\n\n    it('should route to redirect.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'redirectCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET //:id', function() {\n\n    it('should route to redirect.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'redirectCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /', function() {\n\n    it('should route to redirect.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'redirectCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT //:id', function() {\n\n    it('should route to redirect.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'redirectCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH //:id', function() {\n\n    it('should route to redirect.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'redirectCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE //:id', function() {\n\n    it('should route to redirect.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'redirectCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}